---
apiVersion: v1
kind: Template
labels:
  template: asciime
parameters:
- name: NAME
  description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  required: true
  value: asciime

- name: APPLICATION_DOMAIN
  description: The exposed hostname that will route to the ASCIIme service, if left blank a value will be defaulted.
  displayName: Application Hostname
  value: ''

- name: MEMORY_LIMIT
  description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  required: true
  value: 128Mi

objects:
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}-build:latest"
    source:
      type: "Binary"
    strategy:
      type: Docker
      dockerStrategy:
    triggers:
    - type: ConfigChange

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-strip"
    labels:
      app: "${NAME}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    source:
      dockerfile: |-
        FROM scratch
        COPY app /app
        WORKDIR /app
        CMD ["./main"]
      images:
      - from:
          kind: ImageStreamTag
          name: "${NAME}-build:latest"
        paths:
        - sourcePath: /app
          destinationDir: "."
    strategy:
      type: Docker
      dockerStrategy:
    triggers:
      - type: ImageChange
        imageChange:
          from:
            kind: ImageStreamTag
            name: "${NAME}-build:latest"

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}-build"
    labels:
      app: "${NAME}"

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  selector:
    name: "${NAME}"
  spec:
    selector:
      name: "${NAME}"
    ImagePullPolicy: Always
    replicas: 1
    strategy:
      type: "Recreate"
    template:
      metadata:
        labels:
          name: "${NAME}"
        name: "${NAME}"
      spec:
        containers:
          - name: ${NAME}
            image: "${NAME}:latest"
            ports:
              - containerPort: 8080
            readinessProbe:
              httpGet:
                path: "/healthz"
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            livenessProbe:
              httpGet:
                path: "/healthz"
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${NAME}
          from:
            kind: ImageStreamTag
            name: "${NAME}:latest"

- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    selector:
      name: "${NAME}"

- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${NAME}"
